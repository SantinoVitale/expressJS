paths:
  /api/products:
    get:
      summary: Obtiene todos los productos
      tags: 
        - Products
      responses:
        "200":
          description: Los productos fueron obtenidos satisfactoriamente de la base de datos
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Products"
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexion con la base de datos
    post:
      summary: Crea un producto
      tags: 
        - Products
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: Los productos fue creado y subido satisfactoriamente a la base de datos
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Products"
        "400":
          description: Hubo un error a la hora de tomar los datos, generalmente porque falto algun tipo de dato
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexion con la base de datos
  /api/products/{pid}:
    put:
      summary: Modifica un producto
      tags: 
        - Products
      parameters:
      - name: pid
        in: path
        required: true
        description: id del producto a modificar
        schema:
          $type: String
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: "#components/requestBodies/updateCart"
      responses:
        "200":
          description: Los productos fue encontrado y modificado satisfactoriamente de la base de datos
        "400":
          description: Hubo un error a la hora de tomar los datos o al encontrar el producto, generalmente porque falto algun tipo de dato o porque no existe en la base de datos
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexion con la base de datos
    delete:
      summary: Borra un producto
      tags: 
        - Products
      parameters:
      - name: pid
        in: path
        required: true
        description: id del producto a modificar
        schema:
          $type: String
      responses:
        "200":
          description: Los productos fue encontrado y borrado satisfactoriamente de la base de datos
        "400":
          description: Hubo un error al encontrar el producto, puede ser porque se ingreso mal el ID o porque no existe en la base de datos
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexion con la base de datos
  /vista/products:
    get:
      summary: Obtiene todos los productos para mostrarlos en el handlebars
      tags: 
        - Products
      responses:
        "200":
          description: Los productos fueron obtenidos satisfactoriamente de la base de datos y mostrados en el handlebars
          content:
            aplication/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Products"
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexion con la base de datos

components:
  schemas:
    Products:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de mongo
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripcion del producto
        price:
          type: Number
          description: Precio del producto
        code:
          type: String
          description: Codigo del producto
        thumbail:
          type: Array
          description: Imagenes del producto
        stock:
          type: Number
          description: Stock disponible del producto
        category:
          type: String
          description: Categoria del producto
        owner:
          type: String
          description: Quien creo el producto, por default es admin
      example:
        _id: ObjectId("64824d6250b8f8c95f4ba9f3")
        title: Nintendo
        description: Consola de nintendo
        price: 300
        code: abc123
        thumbail: ["Img1", "img2"]
        stock: 30
        category: Consolas
        owner: admin
  requestBodies:
    updateProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de mongo
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripcion del producto
        price:
          type: Number
          description: Precio del producto
        code:
          type: String
          description: Codigo del producto
        thumbail:
          type: Array
          description: Imagenes del producto
        stock:
          type: Number
          description: Stock disponible del producto
        category:
          type: String
          description: Categoria del producto
        owner:
          type: String
          description: Quien creo el producto, por default es admin
      example:
        _id: ObjectId("64824d6250b8f8c95f4ba9f3")
        title: Nintendo
        description: Consola de nintendo
        price: 300
        code: abc123
        thumbail: ["Img1", "img2"]
        stock: 30
        category: Consolas
        owner: admin